name: Go CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22.3'

      - name: Install Dependencies
        run: go mod tidy

      - name: Run Lint
        run: go vet ./...

      - name: Run Unit Tests
        run: go test ./...

      - name: Build Application
        run: go build -v ./...

  security_scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22.3'

      - name: Install Gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run Security Scan
        run: gosec ./...
  
  deploy:
    runs-on: ubuntu-latest
    needs: [build, security_scan]
    if: needs.build.result == 'success'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Make Deployment Script Executable
        run: chmod +x ./scripts/create-eb-environment.sh

      - name: Deploy to Elastic Beanstalk
        run: ./scripts/create-eb-environment.sh
        env:
          EB_ENV_NAME: ${{ secrets.EB_ENV_NAME }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          DB_NAME: ${{ secrets.DB_NAME }}
          VPC_ID: ${{ secrets.VPC_ID }}
          SUBNET_ID: ${{ secrets.SUBNET_ID }}
          IAM_INSTANCE_PROFILE: ${{ secrets.IAM_INSTANCE_PROFILE }}
          SECURITY_GROUP_NAME: ${{ secrets.SECURITY_GROUP_NAME }}

